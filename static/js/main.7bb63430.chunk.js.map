{"version":3,"sources":["Types.js","components/Game/GameField/FieldSquare/FieldSquare.jsx","components/Game/GameField/GameField.jsx","components/Game/GameInfo/Act/Act.jsx","components/Game/GameInfo/Scores/Scores.jsx","components/Game/GameInfo/GameInfo.jsx","components/Game/SideSwitch/SideSwitch.jsx","components/Game/Game.jsx","helpers.js","App.jsx","index.js"],"names":["PropTypes","bool","isRequired","func","arrayOf","string","number","FieldSquare","value","makeMoveClick","className","onClick","type","GameField","squares","map","square","index","Act","counter","winner","firstPlayerX","Scores","firstPlayerScores","secondPlayerScores","ties","GameInfo","setGameField","setXTurn","setCounter","setDisabledSelectors","useState","setFirstPlayerScores","setSecondPlayerScores","setTies","Array","fill","SideSwitch","setFirstPlayerX","disabledSelectors","chooseShapeClick","classnames","htmlFor","name","id","onChange","checked","Game","gameField","xTurn","lines","length","i","a","b","c","identifyWinner","gameFieldCopy","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bb63430.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\n// export const PostType = PropTypes.shape({\n//   id: PropTypes.number.isRequired,\n//   title: PropTypes.string.isRequired,\n//   userId: PropTypes.number.isRequired,\n// }).isRequired;\n\n// export const PostListType = {\n//   posts: PropTypes.arrayOf(PostType),\n//   onPostSelected: PropTypes.func.isRequired,\n//   selectedPostId: PropTypes.number.isRequired,\n// };\n\nexport const SideSwitchType = {\n  firstPlayerX: PropTypes.bool.isRequired,\n  setFirstPlayerX: PropTypes.func.isRequired,\n  disabledSelectors: PropTypes.bool.isRequired,\n};\n\nexport const GameFieldType = {\n  squares: PropTypes.arrayOf(PropTypes.string).isRequired,\n  makeMoveClick: PropTypes.func.isRequired,\n};\n\nexport const FieldSquareType = {\n  value: PropTypes.string.isRequired,\n  makeMoveClick: PropTypes.func.isRequired,\n};\n\nexport const GameInfoType = {\n  winner: PropTypes.string.isRequired,\n  counter: PropTypes.number.isRequired,\n  firstPlayerX: PropTypes.bool.isRequired,\n  setGameField: PropTypes.func.isRequired,\n  setXTurn: PropTypes.func.isRequired,\n  setCounter: PropTypes.func.isRequired,\n  setDisabledSelectors: PropTypes.func.isRequired,\n};\n\nexport const ActType = {\n  counter: PropTypes.number.isRequired,\n  winner: PropTypes.string.isRequired,\n  firstPlayerX: PropTypes.bool.isRequired,\n};\n\nexport const ScoresType = {\n  firstPlayerScores: PropTypes.number.isRequired,\n  secondPlayerScores: PropTypes.number.isRequired,\n  ties: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { FieldSquareType } from '../../../../Types';\nimport './FieldSquare.scss';\n\nexport const FieldSquare = ({ value, makeMoveClick }) => (\n  <button\n    className=\"field__square square\"\n    onClick={makeMoveClick}\n    type=\"button\"\n  >\n    {value}\n  </button>\n);\n\nFieldSquare.propTypes = FieldSquareType;\n","import React from 'react';\nimport { GameFieldType } from '../../../Types';\nimport { FieldSquare } from './FieldSquare/FieldSquare';\nimport './GameField.scss';\n\nexport const GameField = ({ squares, makeMoveClick }) => (\n  <div className=\"game__field field\">\n    {squares.map((square, index) => (\n      <FieldSquare\n        // eslint-disable-next-line react/no-array-index-key\n        key={`${square} - ${index}`}\n        value={square}\n        makeMoveClick={() => makeMoveClick(index)}\n      />\n    ))}\n  </div>\n);\n\nGameField.propTypes = GameFieldType;\n","/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport { ActType } from '../../../../Types';\nimport './Act.scss';\n\nexport default function Act({ counter, winner, firstPlayerX }) {\n  return (\n    <div className=\"info__act act\">\n      {(counter === 9 && !winner)\n        ? (<p className=\"act__draw\">Tie, two professionals collided!</p>)\n        : (\n          <p className=\"act__result\">\n            {winner\n              ? (!firstPlayerX\n                ? `First Player is a Winner!`\n                : `Second Player is a Winner!`\n              )\n              : (firstPlayerX\n                ? 'First Player Turn'\n                : 'Second Player Turn'\n              )\n            }\n          </p>\n        )\n      }\n    </div>\n  );\n}\n\nAct.propTypes = ActType;\n","import React from 'react';\nimport { ScoresType } from '../../../../Types';\nimport './Scores.scss';\n\nexport const Scores = ({ firstPlayerScores, secondPlayerScores, ties }) => (\n  <div className=\"info__scores scores\">\n    <h4 className=\"scores__title\">Scores:</h4>\n\n    <span className=\"scores__player\">\n      First Player:\n      <b className=\"scores__value\">{firstPlayerScores}</b>\n    </span>\n\n    <span className=\"scores__player\">\n      Second Player:\n      <b className=\"scores__value\">{secondPlayerScores}</b>\n    </span>\n\n    <span className=\"scores__player\">\n      Ties:\n      <b className=\"scores__value\">{ties}</b>\n    </span>\n  </div>\n);\n\nScores.propTypes = ScoresType;\n","import React, { useState } from 'react';\nimport { GameInfoType } from '../../../Types';\nimport Act from './Act/Act';\nimport './GameInfo.scss';\nimport { Scores } from './Scores/Scores';\n\nexport const GameInfo = ({\n  winner,\n  counter,\n  firstPlayerX,\n  setGameField,\n  setXTurn,\n  setCounter,\n  setDisabledSelectors,\n}) => {\n  const [firstPlayerScores, setFirstPlayerScores] = useState(0);\n  const [secondPlayerScores, setSecondPlayerScores] = useState(0);\n  const [ties, setTies] = useState(0);\n\n  const startNewGame = () => {\n    if (!firstPlayerX && winner != null) {\n      setFirstPlayerScores(firstPlayerScores + 1);\n    } else if (firstPlayerX && winner != null) {\n      setSecondPlayerScores(secondPlayerScores + 1);\n    } else {\n      setTies(ties + 1);\n    }\n\n    setGameField(Array(9).fill(null));\n    setCounter(0);\n    setXTurn(true);\n    setDisabledSelectors(false);\n  };\n\n  return (\n    <div className=\"game__info info\">\n      <span className=\"info__moves\">\n        Count of moves:\n        <b className=\"info__value\">{counter}</b>\n      </span>\n\n      <Act\n        counter={counter}\n        winner={winner}\n        firstPlayerX={firstPlayerX}\n      />\n\n      <Scores\n        firstPlayerScores={firstPlayerScores}\n        secondPlayerScores={secondPlayerScores}\n        ties={ties}\n      />\n\n      {(winner || counter > 8) && (\n        <button\n          className=\"info__restart-btn\"\n          onClick={startNewGame}\n          type=\"button\"\n        >\n          Start new game\n        </button>\n      )}\n    </div>\n  );\n};\n\nGameInfo.propTypes = GameInfoType;\n","import React from 'react';\nimport classnames from 'classnames';\nimport './SideSwitch.scss';\nimport { SideSwitchType } from '../../../Types';\n\nexport const SideSwitch = ({\n  firstPlayerX,\n  setFirstPlayerX,\n  disabledSelectors,\n}) => {\n  const chooseShapeClick = () => {\n    setFirstPlayerX(!firstPlayerX);\n  };\n\n  return (\n    <div\n      className={classnames(\n        'game__side-switch',\n        'side-switch',\n        { 'side-switch__invisible': disabledSelectors },\n      )}\n    >\n      <div className=\"side-switch__players\">\n        <span className=\"side-switch__player\">\n          First Player\n        </span>\n\n        <div className=\"side-switch__labels\">\n          <label htmlFor=\"first-player-x\">&quot;X&quot;</label>\n          <label htmlFor=\"first-player-o\">&quot;O&quot;</label>\n        </div>\n\n        <div className=\"side-switch__inputs\">\n          <input\n            type=\"radio\"\n            name=\"first-player\"\n            id=\"first-player-x\"\n            onChange={chooseShapeClick}\n            checked={firstPlayerX}\n            className=\"side-switch__checkbox\"\n          />\n          <input\n            type=\"radio\"\n            name=\"first-player\"\n            id=\"first-player-o\"\n            onChange={chooseShapeClick}\n            checked={!firstPlayerX}\n            className=\"side-switch__checkbox\"\n          />\n        </div>\n      </div>\n\n      <div className=\"side-switch__players\">\n        <span className=\"side-switch__player\">\n          Second Player\n        </span>\n        <div className=\"side-switch__labels\">\n          <label htmlFor=\"second-player-x\">&quot;X&quot;</label>\n          <label htmlFor=\"second-player-o\">&quot;O&quot;</label>\n        </div>\n\n        <div className=\"side-switch__inputs\">\n          <input\n            type=\"radio\"\n            name=\"second-player\"\n            id=\"second-player-x\"\n            onChange={chooseShapeClick}\n            checked={!firstPlayerX}\n            className=\"side-switch__checkbox\"\n          />\n\n          <input\n            type=\"radio\"\n            name=\"second-player\"\n            id=\"second-player-o\"\n            onChange={chooseShapeClick}\n            checked={firstPlayerX}\n            className=\"side-switch__checkbox\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSideSwitch.propTypes = SideSwitchType;\n","import React, { useState } from 'react';\nimport { GameField } from './GameField/GameField';\nimport { identifyWinner } from '../../helpers';\nimport { GameInfo } from './GameInfo/GameInfo';\nimport { SideSwitch } from './SideSwitch/SideSwitch';\nimport './Game.scss';\n\nexport const Game = () => {\n  const [gameField, setGameField] = useState(Array(9).fill(null));\n  const [xTurn, setXTurn] = useState(true);\n  const [counter, setCounter] = useState(0);\n  const [firstPlayerX, setFirstPlayerX] = useState(true);\n  const [disabledSelectors, setDisabledSelectors] = useState(false);\n  const winner = identifyWinner(gameField);\n\n  const makeMoveClick = (index) => {\n    const gameFieldCopy = [...gameField];\n\n    if (winner || gameFieldCopy[index]) {\n      return;\n    }\n\n    gameFieldCopy[index] = xTurn ? 'X' : 'O';\n\n    setDisabledSelectors(true);\n    setGameField(gameFieldCopy);\n    setXTurn(!xTurn);\n    setCounter(counter + 1);\n    setFirstPlayerX(!firstPlayerX);\n  };\n\n  return (\n    <div className=\"game\">\n      <SideSwitch\n        firstPlayerX={firstPlayerX}\n        setFirstPlayerX={setFirstPlayerX}\n        disabledSelectors={disabledSelectors}\n      />\n\n      <GameField\n        squares={gameField}\n        makeMoveClick={makeMoveClick}\n      />\n\n      <GameInfo\n        counter={counter}\n        winner={winner}\n        firstPlayerX={firstPlayerX}\n        setGameField={setGameField}\n        setXTurn={setXTurn}\n        setDisabledSelectors={setDisabledSelectors}\n        setCounter={setCounter}\n      />\n    </div>\n  );\n};\n","export const identifyWinner = (squares) => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i + 1) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n};\n","import React from 'react';\nimport './App.scss';\nimport { Game } from './components/Game/Game';\n\nfunction App() {\n  return (\n    <Game />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}